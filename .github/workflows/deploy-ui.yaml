name: Deploy UI to DigitalOcean Droplet

on:
  push:
    branches:
      - "**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          file: ./ui/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bengle-ui:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to Droplet via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DO_SSH_HOST }}
          username: ${{ secrets.DO_SSH_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bengle-ui:latest
            docker stop bengle-ui || true
            docker rm bengle-ui || true
            docker image prune -f
            docker run -d --name bengle-ui --restart always \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/bengle-ui:latestname: Deploy UI to Github Pages

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Enable pnpm via Corepack
        run: corepack enable

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: ui/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ui

      - name: Build with Next.js
        run: pnpm next build
        working-directory: ui

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ui/out

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
