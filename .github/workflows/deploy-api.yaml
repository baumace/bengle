name: Deploy API to Host Server

on:
  push:
    branches:
      - "main"
    paths:
      - 'api/**'
      - '.github/workflows/deploy-api.yaml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api/BengleApi
          file: ./api/BengleApi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bengle-api:latest

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Pull latest Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bengle-api:latest

      - name: Stop existing container
        run: docker stop bengle-api || true

      - name: Remove existing container
        run: docker rm bengle-api || true

      - name: Prune unused images
        run: docker image prune -f

      - name: Set environment variables
        run: |
          echo "BWS_ACCESS_TOKEN=${{ secrets.BWS_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "BWS_SUPABASE_URL_UUID=${{ secrets.BWS_SUPABASE_URL_UUID }}" >> $GITHUB_ENV
          echo "BWS_SUPABASE_KEY_UUID=${{ secrets.BWS_SUPABASE_KEY_UUID }}" >> $GITHUB_ENV

      - name: Run new container
        run: |
          docker run -d --name bengle-api --restart always \
            -p 8080:8080 \
            -e SUPABASE_URL=$(bws --access-token $BWS_ACCESS_TOKEN secret get $BWS_SUPABASE_URL_UUID | jq -r '.value') \
            -e SUPABASE_KEY=$(bws --access-token $BWS_ACCESS_TOKEN secret get $BWS_SUPABASE_KEY_UUID | jq -r '.value') \
            ${{ secrets.DOCKERHUB_USERNAME }}/bengle-api:latest